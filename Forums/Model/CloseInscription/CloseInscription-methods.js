// This method remove an subscription already validatedmodel.CloseInscription.entityMethods.removeInscription = function() {	var curSess = currentSession();	var allUserAccesses;	var promoteToken;	var namespace = require('namespace');		if(curSess.belongsTo('Administrateur')){ // If the current user is a admin				try{						if(namespace.getValidationByEmail() === true){ // Send a mail if the admin have choose the validation by email						// Here is the message send to the user when 				var subject = 'Subscription to the forum '+this.forum.title+' Canceled';				var messageContent = '<html><h3>Hello '+this.user.fullName+'</h3><br><br>';				messageContent += 'You have been subscribed to this forum :'+this.forum.title+'. For some reason the moderator have cancel your subscription.<br />';				messageContent += '';				messageContent += '</HTML>';				namespace.sendMail(this.user.email,subject,'text/html',messageContent);			}			var accessToDelete = ds.Access.query('forum.ID == :1 and user.ID == :2',this.forum.ID,this.user.ID); // get the access related to this subscription			accessToDelete.remove(); // and remove it						this.remove(); // remove the subscription					}catch(e){ // If any error occurs			return {error:e.sourceId,errorMessage:e.message};		}				return true; // return true 			}else if(curSess.user.fullName === 'default guest'){ // Si la personne n'est pas logguer		return false;	}else{ // If the user is not guest and not "Administrateur"				try{			promoteToken = curSess.promoteWith('CUD_Inscription'); // Promote the currentUser with this group to allow him to modify the Inscription dataclass						// Query the access dataClass to see if the user is the moderator of this forum			allUserAccesses = ds.Access.query('(user.ID == :1 or group.allUsers.ID == :1) and statut == "Moderator" and forum.ID == :2',curSess.storage.userID,this.forum.ID);						if(allUserAccesses.length > 0){ // if we find at least one access				try{										if(namespace.getValidationByEmail() === true){ // Send a mail if the admin have choose the validation by email												// Here is the message send to the user when						var subject = 'Subscription to the forum '+this.forum.title+' Canceled';						var messageContent = '<html><h3>Hello '+this.user.fullName+'</h3><br><br>';						messageContent += 'You have been subscribed to this forum :'+this.forum.title+'. For some reason the moderator have cancel your subscription.<br />';						messageContent += '';						messageContent += '</HTML>';												namespace.sendMail(this.user.email,subject,'text/html',messageContent);					}										var accessToDelete = ds.Access.query('forum.ID == :1 and user.ID == :2',this.forum.ID,this.user.ID);// get the access related to this subscription					accessToDelete.remove(); // and remove it										this.remove(); // remove the subscription									}catch(e){					curSess.unPromote(promoteToken); // unpromote the currentUser					return {error:e.sourceId,errorMessage:e.messages};				}								curSess.unPromote(promoteToken); // unpromote the currentUser				return true;			}else{ // if we don't find any "Moderator" access				curSess.unPromote(promoteToken);				return false;			}		}catch(e){ // if any error occurs			return {error:e.sourceId,errorMessage:e.messages};		}	}};model.CloseInscription.entityMethods.removeInscription.scope = 'public';