model.Category.events.validate = function() {	if(this.title == '' || this.title == null ){		return {error : 10, errorMessage:'Must have a title'};	}};model.Category.events.save = function() {	if(this.title == '' || this.title == null ){		return { error: 10, errorMessage:'Must have a title' };	}};model.Category.events.restrict = function() {		var namespace = require('namespace');		var returnCol = ds.Category.createEntityCollection();	var curSess = currentSession();	var allPublicAccesses;	var allUserAccesses;	var promoteToken;	var accessIDArray = [];	var categoryResult;		if(curSess.belongsTo('Administrateur')){		returnCol = ds.Category.all();	}else if(curSess.user.fullName === 'default guest'){ // Si la personne n'est pas logguer				promoteToken = curSess.promoteWith('Read_Access');				allPublicAccesses = ds.Access.query('group.ID == :1',namespace.getPublicGroupID());				accessIDArray = allPublicAccesses.ID;				categoryResult = ds.Category.query('forums.allAccesses.ID in :1 and forums.topics.posts # null',accessIDArray);//		categoryResult = allPublicAccesses.forum.category.query('forums.topics.posts # null');				returnCol.add(categoryResult);				curSess.unPromote(promoteToken);	}else{				promoteToken = curSess.promoteWith('Read_Access');				allUserAccesses = ds.Access.query('user.ID == :1 or group.allUsers.ID == :1 or group{2}.ID == :2',curSess.storage.userID,namespace.getPublicGroupID());				accessIDArray = allUserAccesses.ID;				categoryResult = ds.Category.query('forums.allAccesses.ID in :1 or forums.visible == true',accessIDArray);//		categoryResult = allUserAccesses.forum.category.query('forums.visible == true');				returnCol.add(categoryResult);				curSess.unPromote(promoteToken);	}		return returnCol;	};model.Category.events.remove = function() {	var forums = ds.Forum.query('category.ID = :1',this.ID);		if(forums.length !== 0){		return {				error:11,				errorMessage:'You cannot remove this category because it contain forum(s).'				};	}};model.Category.currentUserUnread.onGet = function() {	var curSess = currentSession();		if(curSess.user.fullName === 'default guest' || curSess.user.name === 'dataAdmin' || curSess.user.name === 'admin'){		return 0;	}else{		return this.forums.sum('currentUserUnread');	}};