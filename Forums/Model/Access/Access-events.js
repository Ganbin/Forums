// Rules before we save the accessmodel.Access.events.save = function() {	var access,		errorObj={error:0,errorMessage:''};			// Test if there is a forum and at least a group or a user	if(this.forum != null){ // If the forum is not null		if(this.group != null && this.user == null){ // if this access is for a group			if(this.isNew()){ // if the entity is a new one and not yet stored in the datasotre				access = ds.Access.find('group.ID = :1 and forum.ID = :2',this.group.ID,this.forum.ID); // we find if this access is already existing				if(access !== null){ // if the access already exist					errorObj.error = 21;					errorObj.errorMessage = 'The access for this group and this forum is already exist!';										return errorObj;				}			}					}else if(this.user != null && this.group == null){			if(this.isNew()){				access = ds.Access.find(' user.ID = :1 and forum.ID = :2',this.user.ID,this.forum.ID);								if(access !== null){					errorObj.error = 22;					errorObj.errorMessage = 'The access for this user and this forum is already exist!';					return errorObj;				}			}		}else{ // else this access didn't have a group or a user, or don't have both			errorObj.error = 23;			errorObj.errorMessage = 'You must have a group or a user (and not both) to create an access!';			return errorObj;		}	}else{ // else if the forum is null		errorObj.error = 24;		errorObj.errorMessage = 'You must have a forum to create an access!';		return errorObj;	}			// A Moderator cannot have a restricted access	if(this.statut === 'Moderator' && this.restricted === true){		errorObj.error = 25;		errorObj.errorMessage = 'You cannot have a restricted acces for a Moderator!';		return errorObj;	}		// An access need at least the read right	if(this.action.read === false){		errorObj.error = 26;		errorObj.errorMessage = 'An access must have at least the read right!';		return errorObj;	}		// The statut is "Moderator" or "Member"	// This is specific to a forum	if(this.statut !== 'Moderator' && this.statut !== 'Member'){		errorObj.error = 27;		errorObj.errorMessage = 'The statut have to be "Member" or "Moderator". (Case sensitive)';		return errorObj;	}	};model.Access.events.init = function() {	this.stamp = new Date(); // Initialize the date when we create a new entity};