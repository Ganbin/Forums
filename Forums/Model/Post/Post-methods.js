model.Post.entityMethods.isMyPost = function() {	if(currentSession().storage.userID){		if(this.user.ID === currentSession().storage.userID){			return true;		}else{			return false;		}	}else{		return false;	}};model.Post.entityMethods.isMyPost.scope ='public';model.Post.entityMethods.reply = function(content,title,replyToID) {			var curSess = currentSession();	var forum = ds.Forum.find('ID = :1',this.topic.forum.ID);	var promoteToken;		if(curSess.user.fullName === 'default guest'){		return {error:71,errorMessage:"You must be logged!"};	}		if(!curSess.belongsTo('Administrateur')){ // If we are not the dataAdmin			try{			promoteToken = curSess.promoteWith('CUD_Topic_Post');								if(forum.hasAccess('write') === true){								var newPost = ds.Post.createEntity();								newPost.title = title;				newPost.content = content;				newPost.stamp = new Date();				newPost.topic = this.topic;				newPost.replyTo = ds.Post(replyToID);				newPost.user = ds.User(curSess.storage.userID);								try{					newPost.save();					newPost.viewPost();				}catch(e){					curSess.unPromote(promoteToken);					return e.messages;				}			}else{				curSess.unPromote(promoteToken);				return {error:72,errorMessage:"You don't have write access for this forum."};			}						curSess.unPromote(promoteToken);		}catch(e){			curSess.unPromote(promoteToken);			return e.messages;		}			}else{ // If we are the data Admin			var newPost = ds.Post.createEntity();						newPost.title = title;		newPost.content = content;		newPost.stamp = new Date();		newPost.topic = this.topic;		newPost.replyTo = ds.Post(replyToID);		newPost.user = ds.User(curSess.storage.userID);				try{			newPost.save();		}catch(e){			return {error:e.sourceId,errorMessage:e.message};		}	}		return newPost;};model.Post.entityMethods.reply.scope = 'public';model.Post.entityMethods.edit = function(content,title,enable) {		var curSess = currentSession();	var forum = ds.Forum.find('ID = :1',this.topic.forum.ID);	var promoteToken;		if(curSess.user.fullName === 'default guest'){		return {error:71,errorMessage:"You must be logged!"};	}			if(!curSess.belongsTo('Administrateur')){ // If we are not the dataAdmin			try{			promoteToken = curSess.promoteWith('CUD_Topic_Post');						if(forum.hasAccess('modify') === true && (this.isMyPost() || forum.isModerator())){								this.title = title;				this.content = content;				this.enable = enable;											try{					this.save();				}catch(e){					curSess.unPromote(promoteToken);					return {error:e.sourceId,errorMessage:e.message};				}							}else{				curSess.unPromote(promoteToken);				return {error:72,errorMessage:"You don't have modify access for this forum."};			}						curSess.unPromote(promoteToken);		}catch(e){					}			}else{ // If we are the data Admin			this.title = title;		this.content = content;		this.enable = enable;				try{			this.save();		}catch(e){			return {error:e.sourceId,errorMessage:e.message};		}		}	};model.Post.entityMethods.edit.scope = 'public';model.Post.entityMethods.disable = function() {	var curSess = currentSession();	var forum = ds.Forum.find('ID = :1',this.topic.forum.ID);	var promoteToken;			if(curSess.user.fullName === 'default guest'){		return {error:71,errorMessage:"You must be logged!"};	}			if(!curSess.belongsTo('Administrateur')){ // If we are not the dataAdmin			try{			promoteToken = curSess.promoteWith('CUD_Topic_Post');						if(forum.hasAccess('del') === true && (this.isMyPost() || forum.isModerator())){								this.enable = false;											//disable all the post linked				var tempLinkedPost = this.posts;				var allLinkedPosts = tempLinkedPost;				while(tempLinkedPost.length !== 0){					allLinkedPosts.add(tempLinkedPost);					tempLinkedPost = tempLinkedPost.posts;				}								allLinkedPosts.forEach(function(post){					post.enable = false;				});												try{					this.save();				}catch(e){					curSess.unPromote(promoteToken);					return {error:e.sourceId,errorMessage:e.message};				}							}else{				curSess.unPromote(promoteToken);				return {error:72,errorMessage:"You don't have delete access for this forum."};			}						curSess.unPromote(promoteToken);		}catch(e){					}			}else{ // If we are the data Admin			this.enable = false;				//disable all the post linked		var tempLinkedPost = this.posts;		var allLinkedPosts = tempLinkedPost;		while(tempLinkedPost.length !== 0){			allLinkedPosts.add(tempLinkedPost);			tempLinkedPost = tempLinkedPost.posts;		}				allLinkedPosts.forEach(function(post){			post.enable = false;		});				try{			this.save();		}catch(e){			return {error:e.sourceId,errorMessage:e.message};		}		}};model.Post.entityMethods.disable.scope = 'public';model.Post.entityMethods.viewPost = function() {	var curSess = currentSession();		if(this.isViewed === false){		if(curSess.user.fullName === 'default guest' || curSess.user.fullName === 'dataAdmin'){			return {error:73,errorMessage:"You don't need to view a post if you are a simple visitor or the dataAdmin..."};		}else{			var viewedPost = ds.ViewPost.createEntity();					viewedPost.user = ds.User(curSess.storage.userID);			viewedPost.post = this;			viewedPost.vote = -1;						viewedPost.save();		}	}	};model.Post.entityMethods.viewPost.scope = 'public';model.Post.entityMethods.vote = function(vote) {	var curSess = currentSession();				if(curSess.user.fullName === 'default guest' || curSess.user.name === 'dataAdmin' || curSess.user.name === 'admin'){		return {error:74,errorMessage:"You cannot vote if you are logged with a directory user or if you are note logged."};	}else{				if(!this.topic.forum.hasAccess('vote')){			return {error:75,errorMessage:"You don't have vote access for this forum."};		}				var viewPost = ds.ViewPost.find('user.ID == :1 and post.ID == :2',curSess.storage.userID,this.ID);				if(viewPost !== null){			viewPost.vote = vote;						try{				viewPost.save();			}catch(e){				return e;			}			return true;		}else{			return {error:76,errorMessage:"You have to view the post before vote it... "};		}	}};model.Post.entityMethods.vote.scope = 'public';// Return true if the threa of the post belongs to the currentUser or if the currentUser is the moderatormodel.Post.entityMethods.isMyThread = function() {	var curSess = currentSession();	if(curSess.storage.userID){		if(this.topic.user.ID === curSess.storage.userID || this.topic.forum.isModerator()){			return true;		}else{			return false;		}	}else{		return false;	}};model.Post.entityMethods.isMyThread.scope = 'public';