/** This QuickStart will create the defaults groups for a good work of the Forum application* You can also set the title of the forum here, in the forumTitle variable.* You can still set it after in the forumsSettings.js file or set it with th setForumTitle() function of the namespace module* You can define if a new user will have to confirm his registration via his email or not. validationByEmail true or false* If so, you have to define your email settings to send emails.** Groups : *			public : Group to assign accesses for the public (non-logged person).*			member : Default group for all forum users.*			dataAdmin : Group who have full access to the data (read/write).*/try{	// Login with the dataAdmin with the default password. If you have changed it, replace it by the new one.	loginByPassword('dataAdmin','admin1234');	var namespace = require('namespace');	// Put the name of your forum here (You can still set it after in the forumsSettings.js file or set it with th setForumTitle() function of the namespace module)	var forumTitle = "My Forum Name";	// Set the validation by email. If true, the user will have to validate his registration to the forum with a validation link send to his email.	var validationByEmail = false;	// The email settings used to send emails.	var mailSettings = {	        "username": "username@mydomain.com",	        "password": "****",	        "smtp": "smtp.mydomain.com",	        "port": 25,	        "SSL": true	     };		// Set the number of days after which a post is considered as read	var postViewTimeout = 100;	// Create the default groups	//var publicGroup = new Group({title:"public",description:"Group to assign accesses for the public (non-logged person)."});	var publicGroup = ds.Group.createEntity();	publicGroup.title = "public";	publicGroup.description = "Group to assign accesses for the public (non-logged person).";		var memberGroup = ds.Group.createEntity();	memberGroup.title = "member";	memberGroup.description = "Default group for all forum users.";		var dataAdminGroup = ds.Group.createEntity();	dataAdminGroup.title = "dataAdmin";	dataAdminGroup.description = "Group who have full access to the data (read/write).";	publicGroup.save();	memberGroup.save();	dataAdminGroup.save();	// Define the settings	namespace.setPublicGroupID(publicGroup.ID);	namespace.setMemberGroupID(memberGroup.ID);	namespace.setDataAdminGroupID(dataAdminGroup.ID);	namespace.setForumTitle(forumTitle);	namespace.setValidationByEmail(validationByEmail);	namespace.setMailSettings(mailSettings);		namespace.setPostViewTimeout(postViewTimeout);	/*	* Create a dataAdmin user	*/	var dataAdminUser = ds.User.createEntity();	dataAdminUser.firstName = "Administrator";	dataAdminUser.lastName = "";	dataAdminUser.login = "administrator";	dataAdminUser.statut = "validated";	dataAdminUser.password = "admin1234";	dataAdminUser.save();	var newUserGroupDataAdmin = ds.UserGroup.createEntity();	newUserGroupDataAdmin.user = dataAdminUser;	newUserGroupDataAdmin.group = dataAdminGroup;		newUserGroupDataAdmin.save();	/*	* Create a default forum with public access	*/	var category = ds.Category.createEntity();	category.title = "Public Forums";	category.description = "Public category";		category.save();	var forum = ds.Forum.createEntity(); 	forum.title = "Public Forum";	forum.description = "Public Forum";	forum.category = category;	forum.save();	var topic = ds.Topic.createEntity();	topic.title = "Welcome to the forum!";	topic.forum = forum;	topic.save();	var post = ds.Post.createEntity();	post.title = "Welcome to the forum!";	post.content = "Welcome to the forum!";	post.topic = topic;	post.user = dataAdminUser;	post.save();	var readAction = ds.Action.createEntity();	readAction.read = true;	readAction.write = false;	readAction.del = false;	readAction.modify = false;	readAction.vote = false;	readAction.save();	var publicAccess = ds.Access.createEntity();	publicAccess.forum = forum;	publicAccess.group = publicGroup;	publicAccess.statut = "Member";	publicAccess.action = readAction;	publicAccess.restricted = false;	publicAccess.save();		"The quick start is now done, you can start using the forum..."	}catch(e){	e	}